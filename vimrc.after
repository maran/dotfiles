"<MainConfig> {
    syn on                          " Turn on syntax highlighting
    set number                      " Enable line number
    set hidden                      " Hide buffers

    "==================== Colors ======================================

    set background=dark             " Set background to dark
    let g:solarized_termcolors=256  " Set solarized console to 256 colors
    set t_Co=256                    " Set vim to 256 colors
    color solarized                 " Color schema

    "==================== Status line =================================

    set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
    set laststatus=2

    "===================== Spelling ===================================

    set spell
    set spelllang=en

    "===================== Cursor =====================================

    set cursorcolumn                " Column marker
    set cursorline

    "===================== Indentation ================================

    set autoindent                  " Autoindent new lines
    set expandtab                   " Use spaces instead of tabs
    set tabstop=2                   " Set tabs to 2 whitespaces
    set shiftwidth=2                " 2
    set softtabstop=2               " 2 space tabs
    set mouse=a                     " Enable mouse support
    set title                       " Set the title of the current file as xterm title

    "==================== History =====================================

    set history=100                 " Set history to 1000
    set undofile

    "==================== Search ======================================

    set incsearch                   " Find as you type
    set ignorecase                  " Case insensitive search
    set smartcase                   " Match case only when a capital is used
    set hlsearch                    " Highlight searches

    "==================== Misc ========================================

    scriptencoding utf-8            " UTF8 Encoding
    let mapleader = ","             " Map leader to
"} </Main config>

"<Commands> {
    " This command based on VimTip483 uses <cword> to get the word under the cursor, but also uses % to limit the search to the current file only
    command GREP :execute 'vimgrep /'.expand('<cword>').'/gj '.expand('%') | copen
    command Dark :set background=dark
    command Light :set background=light
    command W :w
    nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<cr>

    " Finally, this cabbrev uses CTRL-R CTRL-W to get the word under the cursor, limiting the search to files of the same type using expand("%:e")
    cabbrev lvim
          \ lvim /\<lt><C-R><C-W>\>/gj
          \ **/*<C-R>=(expand("%:e")=="" ? "" : ".".expand("%:e"))<CR>
          \ <Bar> lw
          \ <C-Left><C-Left><C-Left>
"} </Commands>


"<KeyBindings> {
    " Map NerdTree to <leader> .
    map <Leader>. :NERDTreeToggle<CR>
    " Window switching
    map <C-h> <C-w>h
    map <C-j> <C-w>j
    map <C-k> <C-w>k
    map <C-l> <C-w>l
    " Window splitting
    map <C-\> :vsp<CR>
    map <C-_> :sp<CR>
    " This mapping uses <cword> to get the word under the cursor, and searches for it in the current directory and all subdirectorie.
    map <F4> :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>

    if has("gui_running")
      map <D-u> :Gist<CR>
      map <D-C> :ColorHEX<CR>
    endif

    nnoremap <F5> :GundoToggle<CR>
    noremap <Leader><Leader> <C-^>
    inoremap jj <ESC>
"} </KeyBindings>


if has("autocmd")
  autocmd BufNewFile,BufRead Rakefile,Capfile,Gemfile,Guardfile,config.ru setfiletype ruby
  autocmd BufNewFile,BufRead *.styl setfiletype sass
  autocmd BufNewFile,BufRead *.jade setfiletype haml
  " Automatically delete fugitive buffers
  autocmd BufReadPost fugitive://* set bufhidden=delete
  autocmd BufNewFile,BufRead *.hamljs setfiletype haml

  autocmd User fugitive
    \ if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' |
    \   nnoremap <buffer> .. :edit %:h<CR> |
    \ endif

endif


if has("gui_running")
  " Get rid of annoying balloon error popups about ri -f simple. I don't care
  " about hovers anyway
  autocmd FileType ruby,eruby set noballooneval
else
endif

" Enable the wild menu on tab in ex mode
set wildchar=<Tab> wildmenu wildmode=full

" Autosafe on focus lost, ignore warnings for new files
au FocusLost * silent! wall

" Signs
sign define fixme text=!! linehl=Todo texthl=Error icon=/path/to/todo.xpm
function! SignFixme(linenumber)
  execute(":sign place ".a:linenumber." line=".a:linenumber." name=fixme file=".expand("%:p"))
endfunction

function! Mark()
  execute(":call SignFixme(".line(".").")")
endfunction

map mm :call Mark()<CR>
" TODO
function! AutoFixme() range
  for n in range(a:firstline, a:lastline)
    if getline(n) =~ '\TODO'
      echo "Found"
      execute(":call SignFixme(".n.")")
    endif
  endfor
endfunction

